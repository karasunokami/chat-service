openapi: 3.0.3
info:
  title: Bank Support Chat Manager API
  version: v1

servers:
  - url: http://localhost:8081/v1
    description: Development server

paths:
  /getFreeHandsBtnAvailability:
    post:
      description: Check if manager can get new clients.
      parameters:
        - $ref: "#/components/parameters/XRequestIDHeader"
      responses:
        '200':
          description: Manager availability.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetFreeHandsBtnAvailabilityResponse"

  /freeHands:
    post:
      description: Add manager to free managers pool.
      parameters:
          - $ref: "#/components/parameters/XRequestIDHeader"
      responses:
        '200':
          description: Manager availability.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FreeHandsResponse"

  /getChats:
    post:
      description: Get the list of chats with open problems.
      parameters:
        - $ref: "#/components/parameters/XRequestIDHeader"
      responses:
        '200':
          description: Chats list.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetChatsResponse"

  /getChatHistory:
    post:
      description: Get chat history.
      parameters:
        - $ref: "#/components/parameters/XRequestIDHeader"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetHistoryRequest"
      responses:
        '200':
          description: Messages list.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetHistoryResponse"

security:
  - bearerAuth: [ ]

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  parameters:
    XRequestIDHeader:
      in: header
      name: X-Request-ID
      schema:
        type: string
        format: uuid
        x-go-type: types.RequestID
        x-go-import:
          path: "github.com/karasunokami/chat-service/internal/types"
      required: true

  schemas:
    # Common.

    ChatId:
      required: [ chatId ]
      properties:
        chatId:
          type: string
          format: uuid
          x-go-type: types.ChatID
          x-go-type-import:
            path: "github.com/karasunokami/chat-service/internal/types"

    Error:
      required: [ message, code ]
      properties:
        code:
          $ref: "#/components/schemas/ErrorCode"
        message:
          type: string
        details:
          type: string

    ErrorCode:
      type: integer
      description: contains HTTP error codes and specific business logic error codes (the last must be >= 1000).
      enum:
        - 5000
      x-enum-varnames:
        - ErrorCodeFreeHandsManagerOverloadError
      minimum: 400

    GetFreeHandsBtnAvailabilityResponse:
      properties:
        data:
          $ref: "#/components/schemas/ManagerAvailability"
        error:
          $ref: "#/components/schemas/Error"

    FreeHandsResponse:
      properties:
        data:
          type: object
          nullable: true
        error:
          $ref: "#/components/schemas/Error"

    ManagerAvailability:
      required: [ available ]
      properties:
        available:
          type: boolean

    GetChatsResponse:
      properties:
        data:
          $ref: "#/components/schemas/ChatList"
        error:
          $ref: "#/components/schemas/Error"

    ChatList:
      required: [ chats ]
      properties:
        chats:
          type: array
          items: { $ref: "#/components/schemas/Chat" }

    Chat:
      allOf:
        - $ref: "#/components/schemas/ChatId"
        - type: object
          required: [ clientId ]
          properties:
            clientId:
              type: string
              format: uuid
              x-go-type: types.UserID
              x-go-type-import:
                path: "github.com/karasunokami/chat-service/internal/types"

    # /getChatHistory

    GetHistoryRequest:
      required: [ chatId ]
      properties:
        pageSize:
          type: integer
          minimum: 10
          maximum: 100
        cursor:
          type: string
        chatId:
          type: string
          format: uuid
          x-go-type: types.ChatID
          x-go-type-import:
            path: "github.com/karasunokami/chat-service/internal/types"

    GetHistoryResponse:
      properties:
        data:
          $ref: "#/components/schemas/MessagesPage"
        error:
          $ref: "#/components/schemas/Error"

    MessagesPage:
      required: [ next, messages ]
      properties:
        next:
          type: string
        messages:
          type: array
          items: { $ref: "#/components/schemas/Message" }

    Message:
      required: [ id, authorId, body, createdAt ]
      properties:
        id:
          type: string
          format: uuid
          x-go-type: types.MessageID
          x-go-type-import:
            path: "github.com/karasunokami/chat-service/internal/types"
        authorId:
          type: string
          format: uuid
          x-go-type: types.UserID
          x-go-type-import:
            path: "github.com/karasunokami/chat-service/internal/types"
        body:
          type: string
          maxLength: 3000
        createdAt:
          type: string
          format: date-time
