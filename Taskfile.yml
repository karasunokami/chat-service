# https://taskfile.dev
version: '3'

silent: true

vars:
  GO_MODULE: github.com/karasunokami/chat-service
  GO_FILES:
    sh: find . -type f -name '*.go' -not -path "./vendor/*" -not -path "*.gen.go" | tr "\n" " "

  GOLANGCI_LINT_VERSION: v1.52.2
  GOLANGCI_LINT_CACHE:
    sh: echo "$HOME/.libscache"

  DOCKER_COMPOSE_PATHS: |
    ./deploy/local/docker-compose.yml
    ./deploy/local/docker-compose.sentry.yml

  DOCKER_COMPOSE_CMD: docker compose --env-file .env -f {{.DOCKER_COMPOSE_PATHS | trim | splitLines | join " -f "}}

  TYPES: |
    ChatID
    MessageID
    ProblemID
    UserID
  TYPES_PKG: types
  TYPES_DST: ./internal/types/types.gen.go
  TYPES_TEMPLATE: ./internal/types/types.tmpl

tasks:
  default:
    cmds:
      - task: tidy
      - task: fmt
      - task: lint
      - task: tests
      - task: build

  tidy:
    - echo "- Tidy"
    - go mod tidy
    - task: vendor

  vendor:
    - echo "- Vendor"
    - go mod vendor

  fmt:
    - echo "- Format"
    - docker run --rm -v "$(pwd):/app" -w /app chat-service-tools gofumpt -l -w {{.GO_FILES}}
    - docker run --rm -v "$(pwd):/app" -w /app chat-service-tools gci -l {{.GO_MODULE}} {{.GO_FILES}}

  lint:
    cmds:
      - echo "- Lint"
      - mkdir -p {{.GOLANGCI_LINT_CACHE}}
      - task: lint:cmd
        vars: {CLI_ARGS: "run -v --fix --timeout=5m ./..."}

  lint:cmd:
    cmds:
      - |
        docker run --rm \
          -v "$(pwd):/app" -w /app \
          -v "{{.GOLANGCI_LINT_CACHE}}:/root/.cache" \
          chat-service-tools \
          golangci-lint {{.CLI_ARGS}}

  tests:
    cmds:
      - echo "- Tests"
      - go test -race ./...

  build:
    cmds:
      - echo "- Build"
      - go build ./cmd/chat-service

  generate:
    cmds:
      - echo "- Run go generate..."
      - docker run --rm -v "$(pwd):/app" -w /app chat-service-tools go generate ./...
      - task: gen:types

  gen:types:
    cmds:
      - echo "- Generate types..."
      - |
         go run ./cmd/gen-types \
         {{.TYPES_PKG}} \
         {{.TYPES | trim | splitLines | join ","}} \
         {{.TYPES_DST}} \
         {{.TYPES_TEMPLATE}}
        

  dev-tools:install:
    cmds:
      - echo "- Install dev tools"
      - |
        docker build . \
        -f tools.dockerfile \
        --build-arg GOLANGCI_LINT_VERSION={{.GOLANGCI_LINT_VERSION}} \
        -t chat-service-tools

  deps:
    cmds:
      - test -f .env || cp .env.example .env
      - "{{.DOCKER_COMPOSE_CMD}} up -d"

  deps:cmd:
    cmds:
      - "{{.DOCKER_COMPOSE_CMD}} {{.CLI_ARGS}}"

  deps:status:
    cmds:
      - "{{.DOCKER_COMPOSE_CMD}} ps"

  deps:logs:
    cmds:
      - "{{.DOCKER_COMPOSE_CMD}} logs -f {{.CLI_ARGS}}"

  deps:stop:
    cmds:
      - "{{.DOCKER_COMPOSE_CMD}} stop"

  deps:reset-psql:
    cmds:
      - task: deps:reset
        vars:
          SERVICE: postgres

  deps:sentry-init:
    cmds:
      - "COMPOSE_PROFILES=sentry {{.DOCKER_COMPOSE_CMD}} run -it sentry upgrade"

  deps:sentry-create-user:
    cmds:
      - "COMPOSE_PROFILES=sentry {{.DOCKER_COMPOSE_CMD}} run -it sentry createuser"

  deps:reset:
    cmds:
      - "{{.DOCKER_COMPOSE_CMD}} rm -fsv {{.SERVICE}}"
      - "{{.DOCKER_COMPOSE_CMD}} up -d {{.SERVICE}}"
